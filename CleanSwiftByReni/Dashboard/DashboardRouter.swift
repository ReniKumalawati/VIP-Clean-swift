//
//  DashboardRouter.swift
//  CleanSwiftByReni
//
//  Created by Bootcamp on 08/05/19.
//  Copyright (c) 2019 Bootcamp. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol DashboardRoutingLogic
{
  func routeToDetail(segue: UIStoryboardSegue?)
}

protocol DashboardDataPassing
{
  var dataStore: DashboardDataStore? { get set }
}

class DashboardRouter: NSObject, DashboardRoutingLogic, DashboardDataPassing
{
    
  weak var viewController: DashboardViewController?
  var dataStore: DashboardDataStore?
  
  // MARK: Routing
  
  func routeToDetail(segue: UIStoryboardSegue?)
  {
    if let segue = segue {
      let destinationVC = segue.destination as! DetailViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToSomewhere(source: dataStore!, destination: &destinationDS)
    } else {
      let storyboard = UIStoryboard(name: "Main", bundle: nil)
      let destinationVC = storyboard.instantiateViewController(withIdentifier: "DetailViewController") as! DetailViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToSomewhere(source: dataStore!, destination: &destinationDS)
      navigateToSomewhere(source: viewController!, destination: destinationVC)
    }
  }

  // MARK: Navigation
  
  func navigateToSomewhere(source: DashboardViewController, destination: DetailViewController)
  {
    source.show(destination, sender: nil)
  }
  
  // MARK: Passing data
  
  func passDataToSomewhere(source: DashboardDataStore, destination: inout DetailDataStore)
  {
    destination.name = source.name
  }
}
